export type Bridge = {
  "version": "0.1.0",
  "name": "bridge",
  "instructions": [
    {
      "name": "initBridgeInstruction",
      "docs": [
        "This instruction creates the bridge."
      ],
      "accounts": [
        {
          "name": "bridgeStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge state account stores state associated",
            "with the bridge. This account is being initialized with 10240",
            "bytes, paid for by payer. This account is a PDA generated by",
            "the following seeds: the string literal `bridge_state`"
          ]
        },
        {
          "name": "bridgeVaultAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge vault account is the SPL token account",
            "that holds the tokens bridged to the DFlow network. This account",
            "is being initialized and is paid for by payer. This is a token",
            "account which is being initialized, and is associated with the",
            "mint mint. The authority for this token account is bridge_state_account.",
            "This account is a PDA generated by the following seeds: the string",
            "literal `bridge_vault`"
          ]
        },
        {
          "name": "mint",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "The SPL mint of the asset being bridged."
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The payer for the transaction. This account is",
            "a signer for the instruction. This account is expected to be",
            "mutable"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "bridgeStateAccountBump",
          "type": "u8"
        },
        {
          "name": "bridgeVaultAccountBump",
          "type": "u8"
        },
        {
          "name": "m",
          "type": "u8"
        },
        {
          "name": "authorities",
          "type": {
            "array": [
              "publicKey",
              26
            ]
          }
        }
      ]
    },
    {
      "name": "depositInstruction",
      "docs": [
        "This instruction moves tokens to the DFlow network."
      ],
      "accounts": [
        {
          "name": "bridgeStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge state account stores state associated",
            "with the bridge. This account is expected to be mutable. This",
            "account is a PDA generated by the following seeds: the string",
            "literal `bridge_state`"
          ]
        },
        {
          "name": "bridgeVaultAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge vault account is the SPL token account",
            "that holds the tokens bridged to the DFlow network. This account",
            "is expected to be mutable. This account is a PDA generated by",
            "the following seeds: the string literal `bridge_vault`"
          ]
        },
        {
          "name": "depositor",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "This account pays for the transaction and rent",
            "exemption. This account is a signer for the instruction. This",
            "account is expected to be mutable"
          ]
        },
        {
          "name": "fromAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The SPL token account from which tokens are transferred",
            "to the bridge. This account is expected to be mutable"
          ]
        },
        {
          "name": "depositStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The deposit state account stores information about",
            "the deposit. This account is being initialized with 65 bytes,",
            "paid for by depositor. This account is a PDA generated by the",
            "following seeds: the string literal `deposit_state`, an unsigned",
            "64 bit integer"
          ]
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "bridgeStateAccountBump",
          "type": "u8"
        },
        {
          "name": "bridgeVaultAccountBump",
          "type": "u8"
        },
        {
          "name": "depositStateAccountBump",
          "type": "u8"
        },
        {
          "name": "depositStateAccountSeed",
          "type": "u64"
        },
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "recipient",
          "type": {
            "array": [
              "u8",
              33
            ]
          }
        }
      ]
    },
    {
      "name": "withdrawInstruction",
      "docs": [
        "This instruction moves tokens from the DFlow network."
      ],
      "accounts": [
        {
          "name": "bridgeStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge state account stores state associated",
            "with the bridge. This account is expected to be mutable. This",
            "account is a PDA generated by the following seeds: the string",
            "literal `bridge_state`"
          ]
        },
        {
          "name": "bridgeVaultAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge vault account is the SPL token account",
            "that holds the tokens bridged to the DFlow network. This account",
            "is expected to be mutable. This account is a PDA generated by",
            "the following seeds: the string literal `bridge_vault`"
          ]
        },
        {
          "name": "toAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The SPL token account from which tokens are transferred",
            "to the bridge. This account is expected to be mutable"
          ]
        },
        {
          "name": "withdrawalStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The withdrawal state account stores information",
            "about the withdrawal. This account is being initialized with",
            "24 bytes, paid for by payer. This account is a PDA generated",
            "by the following seeds: the string literal `withdrawal_state`,",
            "an unsigned 64 bit integer"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The payer for the transaction. This account is",
            "a signer for the instruction. This account is expected to be",
            "mutable"
          ]
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "instructions",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "bridgeStateAccountBump",
          "type": "u8"
        },
        {
          "name": "bridgeVaultAccountBump",
          "type": "u8"
        },
        {
          "name": "withdrawalStateAccountBump",
          "type": "u8"
        },
        {
          "name": "withdrawalId",
          "type": "u64"
        }
      ]
    },
    {
      "name": "updateSigningKeyInstruction",
      "docs": [
        "This instruction updates the calling authority's signing key."
      ],
      "accounts": [
        {
          "name": "bridgeStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge state account stores state associated",
            "with the bridge. This account is expected to be mutable. This",
            "account is a PDA generated by the following seeds: the string",
            "literal `bridge_state`"
          ]
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "The authority's master key or current signing",
            "key. You should use the current signing key if possible. This",
            "account is a signer for the instruction"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The payer for the transaction. This account is",
            "a signer for the instruction. This account is expected to be",
            "mutable"
          ]
        }
      ],
      "args": [
        {
          "name": "bridgeStateAccountBump",
          "type": "u8"
        },
        {
          "name": "newSigningKey",
          "type": "publicKey"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "bridgeStateAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "mint",
            "type": "publicKey"
          },
          {
            "name": "m",
            "type": "u8"
          },
          {
            "name": "authorities",
            "type": {
              "vec": {
                "defined": "BridgeAuthority"
              }
            }
          }
        ]
      }
    },
    {
      "name": "depositStateAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "seed",
            "type": "u64"
          },
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "recipient",
            "type": {
              "array": [
                "u8",
                33
              ]
            }
          }
        ]
      }
    },
    {
      "name": "withdrawalStateAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "withdrawalId",
            "type": "u64"
          },
          {
            "name": "nonce",
            "type": "u64"
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "BridgeAuthority",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "masterKey",
            "type": "publicKey"
          },
          {
            "name": "signingKey",
            "type": "publicKey"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 15000,
      "name": "DuplicateAuthorityKey"
    },
    {
      "code": 15001,
      "name": "InvalidInit"
    },
    {
      "code": 15002,
      "name": "InvalidMValue"
    },
    {
      "code": 15050,
      "name": "InvalidAmount"
    },
    {
      "code": 15101,
      "name": "WithdrawalNotAuthorized"
    },
    {
      "code": 15102,
      "name": "WithdrawEd25519InstructionNotIncluded"
    },
    {
      "code": 15103,
      "name": "WithdrawEd25519InstructionInvalidDataSize"
    },
    {
      "code": 15104,
      "name": "WithdrawEd25519InstructionInvalidSigIndex"
    },
    {
      "code": 15105,
      "name": "WithdrawEd25519InstructionInvalidPubKeyIndex"
    },
    {
      "code": 15106,
      "name": "WithdrawEd25519InstructionInvalidMsgIndex"
    },
    {
      "code": 15107,
      "name": "WithdrawEd25519InstructionInvalidSigOffset"
    },
    {
      "code": 15108,
      "name": "WithdrawEd25519InstructionInvalidPubKeyOffset"
    },
    {
      "code": 15109,
      "name": "WithdrawEd25519InstructionInvalidMsgOffset"
    },
    {
      "code": 15110,
      "name": "WithdrawEd25519InstructionInvalidSig"
    },
    {
      "code": 15111,
      "name": "WithdrawEd25519InstructionInvalidPubKey"
    },
    {
      "code": 15112,
      "name": "WithdrawEd25519InstructionInvalidMsg"
    },
    {
      "code": 15020,
      "name": "AuthorityNotFound"
    },
    {
      "code": 15998,
      "name": "OverflowError"
    },
    {
      "code": 15999,
      "name": "InvariantViolated"
    }
  ]
};

export const IDL: Bridge = {
  "version": "0.1.0",
  "name": "bridge",
  "instructions": [
    {
      "name": "initBridgeInstruction",
      "docs": [
        "This instruction creates the bridge."
      ],
      "accounts": [
        {
          "name": "bridgeStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge state account stores state associated",
            "with the bridge. This account is being initialized with 10240",
            "bytes, paid for by payer. This account is a PDA generated by",
            "the following seeds: the string literal `bridge_state`"
          ]
        },
        {
          "name": "bridgeVaultAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge vault account is the SPL token account",
            "that holds the tokens bridged to the DFlow network. This account",
            "is being initialized and is paid for by payer. This is a token",
            "account which is being initialized, and is associated with the",
            "mint mint. The authority for this token account is bridge_state_account.",
            "This account is a PDA generated by the following seeds: the string",
            "literal `bridge_vault`"
          ]
        },
        {
          "name": "mint",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "The SPL mint of the asset being bridged."
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The payer for the transaction. This account is",
            "a signer for the instruction. This account is expected to be",
            "mutable"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "bridgeStateAccountBump",
          "type": "u8"
        },
        {
          "name": "bridgeVaultAccountBump",
          "type": "u8"
        },
        {
          "name": "m",
          "type": "u8"
        },
        {
          "name": "authorities",
          "type": {
            "array": [
              "publicKey",
              26
            ]
          }
        }
      ]
    },
    {
      "name": "depositInstruction",
      "docs": [
        "This instruction moves tokens to the DFlow network."
      ],
      "accounts": [
        {
          "name": "bridgeStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge state account stores state associated",
            "with the bridge. This account is expected to be mutable. This",
            "account is a PDA generated by the following seeds: the string",
            "literal `bridge_state`"
          ]
        },
        {
          "name": "bridgeVaultAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge vault account is the SPL token account",
            "that holds the tokens bridged to the DFlow network. This account",
            "is expected to be mutable. This account is a PDA generated by",
            "the following seeds: the string literal `bridge_vault`"
          ]
        },
        {
          "name": "depositor",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "This account pays for the transaction and rent",
            "exemption. This account is a signer for the instruction. This",
            "account is expected to be mutable"
          ]
        },
        {
          "name": "fromAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The SPL token account from which tokens are transferred",
            "to the bridge. This account is expected to be mutable"
          ]
        },
        {
          "name": "depositStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The deposit state account stores information about",
            "the deposit. This account is being initialized with 65 bytes,",
            "paid for by depositor. This account is a PDA generated by the",
            "following seeds: the string literal `deposit_state`, an unsigned",
            "64 bit integer"
          ]
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "bridgeStateAccountBump",
          "type": "u8"
        },
        {
          "name": "bridgeVaultAccountBump",
          "type": "u8"
        },
        {
          "name": "depositStateAccountBump",
          "type": "u8"
        },
        {
          "name": "depositStateAccountSeed",
          "type": "u64"
        },
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "recipient",
          "type": {
            "array": [
              "u8",
              33
            ]
          }
        }
      ]
    },
    {
      "name": "withdrawInstruction",
      "docs": [
        "This instruction moves tokens from the DFlow network."
      ],
      "accounts": [
        {
          "name": "bridgeStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge state account stores state associated",
            "with the bridge. This account is expected to be mutable. This",
            "account is a PDA generated by the following seeds: the string",
            "literal `bridge_state`"
          ]
        },
        {
          "name": "bridgeVaultAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge vault account is the SPL token account",
            "that holds the tokens bridged to the DFlow network. This account",
            "is expected to be mutable. This account is a PDA generated by",
            "the following seeds: the string literal `bridge_vault`"
          ]
        },
        {
          "name": "toAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The SPL token account from which tokens are transferred",
            "to the bridge. This account is expected to be mutable"
          ]
        },
        {
          "name": "withdrawalStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The withdrawal state account stores information",
            "about the withdrawal. This account is being initialized with",
            "24 bytes, paid for by payer. This account is a PDA generated",
            "by the following seeds: the string literal `withdrawal_state`,",
            "an unsigned 64 bit integer"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The payer for the transaction. This account is",
            "a signer for the instruction. This account is expected to be",
            "mutable"
          ]
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "instructions",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "bridgeStateAccountBump",
          "type": "u8"
        },
        {
          "name": "bridgeVaultAccountBump",
          "type": "u8"
        },
        {
          "name": "withdrawalStateAccountBump",
          "type": "u8"
        },
        {
          "name": "withdrawalId",
          "type": "u64"
        }
      ]
    },
    {
      "name": "updateSigningKeyInstruction",
      "docs": [
        "This instruction updates the calling authority's signing key."
      ],
      "accounts": [
        {
          "name": "bridgeStateAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The bridge state account stores state associated",
            "with the bridge. This account is expected to be mutable. This",
            "account is a PDA generated by the following seeds: the string",
            "literal `bridge_state`"
          ]
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "The authority's master key or current signing",
            "key. You should use the current signing key if possible. This",
            "account is a signer for the instruction"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The payer for the transaction. This account is",
            "a signer for the instruction. This account is expected to be",
            "mutable"
          ]
        }
      ],
      "args": [
        {
          "name": "bridgeStateAccountBump",
          "type": "u8"
        },
        {
          "name": "newSigningKey",
          "type": "publicKey"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "bridgeStateAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "mint",
            "type": "publicKey"
          },
          {
            "name": "m",
            "type": "u8"
          },
          {
            "name": "authorities",
            "type": {
              "vec": {
                "defined": "BridgeAuthority"
              }
            }
          }
        ]
      }
    },
    {
      "name": "depositStateAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "seed",
            "type": "u64"
          },
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "recipient",
            "type": {
              "array": [
                "u8",
                33
              ]
            }
          }
        ]
      }
    },
    {
      "name": "withdrawalStateAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "withdrawalId",
            "type": "u64"
          },
          {
            "name": "nonce",
            "type": "u64"
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "BridgeAuthority",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "masterKey",
            "type": "publicKey"
          },
          {
            "name": "signingKey",
            "type": "publicKey"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 15000,
      "name": "DuplicateAuthorityKey"
    },
    {
      "code": 15001,
      "name": "InvalidInit"
    },
    {
      "code": 15002,
      "name": "InvalidMValue"
    },
    {
      "code": 15050,
      "name": "InvalidAmount"
    },
    {
      "code": 15101,
      "name": "WithdrawalNotAuthorized"
    },
    {
      "code": 15102,
      "name": "WithdrawEd25519InstructionNotIncluded"
    },
    {
      "code": 15103,
      "name": "WithdrawEd25519InstructionInvalidDataSize"
    },
    {
      "code": 15104,
      "name": "WithdrawEd25519InstructionInvalidSigIndex"
    },
    {
      "code": 15105,
      "name": "WithdrawEd25519InstructionInvalidPubKeyIndex"
    },
    {
      "code": 15106,
      "name": "WithdrawEd25519InstructionInvalidMsgIndex"
    },
    {
      "code": 15107,
      "name": "WithdrawEd25519InstructionInvalidSigOffset"
    },
    {
      "code": 15108,
      "name": "WithdrawEd25519InstructionInvalidPubKeyOffset"
    },
    {
      "code": 15109,
      "name": "WithdrawEd25519InstructionInvalidMsgOffset"
    },
    {
      "code": 15110,
      "name": "WithdrawEd25519InstructionInvalidSig"
    },
    {
      "code": 15111,
      "name": "WithdrawEd25519InstructionInvalidPubKey"
    },
    {
      "code": 15112,
      "name": "WithdrawEd25519InstructionInvalidMsg"
    },
    {
      "code": 15020,
      "name": "AuthorityNotFound"
    },
    {
      "code": 15998,
      "name": "OverflowError"
    },
    {
      "code": 15999,
      "name": "InvariantViolated"
    }
  ]
};
